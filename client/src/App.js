import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import CssBaseline from '@mui/material/CssBaseline';
import PlayerLogin from './components/PlayerLogin';
import RoomSelection from './components/RoomSelection';
import RoomSetup from './components/RoomSetup';
import GameBoardRefactored from './components/GameBoardRefactored';
import RatingsPage from './components/RatingsPage';
import { useLogout } from './hooks/useLogout';

// –°–æ–∑–¥–∞–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
const darkTheme = createTheme({
  palette: {
    mode: 'dark',
    primary: {
      main: '#9C27B0',
    },
    secondary: {
      main: '#FF9800',
    },
    background: {
      default: '#1a1a2e',
      paper: '#16213e',
    },
    text: {
      primary: '#ffffff',
      secondary: 'rgba(255, 255, 255, 0.7)',
    },
  },
  typography: {
    fontFamily: '"Roboto", "Helvetica", "Arial", sans-serif',
    h1: {
      fontWeight: 700,
    },
    h2: {
      fontWeight: 600,
    },
    h3: {
      fontWeight: 600,
    },
    h4: {
      fontWeight: 500,
    },
    h5: {
      fontWeight: 500,
    },
    h6: {
      fontWeight: 500,
    },
  },
  components: {
    MuiButton: {
      styleOverrides: {
        root: {
          borderRadius: 8,
          textTransform: 'none',
          fontWeight: 600,
        },
      },
    },
    MuiCard: {
      styleOverrides: {
        root: {
          borderRadius: 12,
          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',
        },
      },
    },
  },
});

function App() {
  const [currentPlayer, setCurrentPlayer] = useState(null);
  const [currentRoom, setCurrentRoom] = useState(null);
  const { logout } = useLogout();

  const handlePlayerLogin = (playerData) => {
    console.log('üîÑ [App] Player logged in:', playerData);
    setCurrentPlayer(playerData);
  };

  const handleRoomSetup = (roomData) => {
    console.log('üîÑ [App] Room setup completed:', roomData);
    setCurrentRoom(roomData);
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–Ω–∞—Ç—ã
    window.location.href = `/room/${roomData.roomId}`;
  };

  const handleExitGame = () => {
    console.log('üîÑ [App] Exiting game');
    setCurrentRoom(null);
    setCurrentPlayer(null);
  };

  const handleExitToMenu = () => {
    console.log('üîÑ [App] Exiting to menu');
    setCurrentRoom(null);
  };

  const handleLogout = () => {
    console.log('üîÑ [App] Logging out');
    logout();
    setCurrentPlayer(null);
    setCurrentRoom(null);
  };

  return (
    <ThemeProvider theme={darkTheme}>
      <CssBaseline />
      <Router>
        <Routes>
          {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –≤—Ö–æ–¥ –∏–≥—Ä–æ–∫–∞ */}
          <Route 
            path="/" 
            element={
              currentPlayer ? (
                <Navigate to="/menu" replace />
              ) : (
                <PlayerLogin onLogin={handlePlayerLogin} />
              )
            } 
          />

          {/* –ú–µ–Ω—é - –≤—ã–±–æ—Ä –∫–æ–º–Ω–∞—Ç—ã */}
          <Route 
            path="/menu" 
            element={
              currentPlayer ? (
                <RoomSelection 
                  playerData={currentPlayer}
                  onRoomSelect={handleRoomSetup}
                  onLogout={handleLogout}
                />
              ) : (
                <Navigate to="/" replace />
              )
            } 
          />

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–Ω–∞—Ç—ã */}
          <Route 
            path="/room/:roomId" 
            element={
              currentPlayer && currentRoom ? (
                <RoomSetup 
                  user={currentPlayer}
                  roomId={currentRoom.roomId}
                  onSetupComplete={handleRoomSetup}
                  onBack={() => setCurrentRoom(null)}
                  onLogout={handleLogout}
                />
              ) : (
                <Navigate to="/" replace />
              )
            } 
          />

          {/* –ò–≥—Ä–æ–≤–∞—è –¥–æ—Å–∫–∞ */}
          <Route 
            path="/game/:roomId" 
            element={
              currentPlayer && currentRoom ? (
                <GameBoardRefactored 
                  roomId={currentRoom.roomId}
                  onExit={handleExitToMenu}
                />
              ) : (
                <Navigate to="/" replace />
              )
            } 
          />

          {/* –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ */}
          <Route 
            path="/ratings" 
            element={
              currentPlayer ? (
                <RatingsPage />
              ) : (
                <Navigate to="/" replace />
              )
            } 
          />

          {/* –†–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ */}
          <Route path="*" element={<Navigate to="/" replace />} />
        </Routes>
      </Router>
    </ThemeProvider>
  );
}

export default App;
