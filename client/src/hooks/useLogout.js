import { useCallback } from 'react';
import socket from '../socket';

export const useLogout = () => {
  const logout = useCallback((roomId, reason = 'user_request') => {
    console.log('üîÑ [useLogout] Starting logout process...', { roomId, reason });
    
    // –û—á–∏—â–∞–µ–º localStorage
    const clearStorage = () => {
      localStorage.removeItem('cashflow_currentRoom');
      localStorage.removeItem('cashflow_inSetup');
      localStorage.removeItem('cashflow_user');
      localStorage.removeItem('cashflow_gameStarted');
      console.log('üóëÔ∏è [useLogout] localStorage cleared');
    };

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
    const forceRedirect = () => {
      console.log('‚ö†Ô∏è [useLogout] Force redirect after timeout');
      clearStorage();
      window.location.href = '/';
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç
    const redirectTimeout = setTimeout(forceRedirect, 5000);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞
    const handleSuccessfulLogout = (data) => {
      console.log('‚úÖ [useLogout] Logout successful:', data);
      clearTimeout(redirectTimeout);
      clearStorage();
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      window.location.href = '/';
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –≤—ã—Ö–æ–¥–∞
    const handleLogoutError = (data) => {
      console.log('‚ùå [useLogout] Logout failed:', data);
      clearTimeout(redirectTimeout);
      clearStorage();
      
      // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      window.location.href = '/';
    };

    // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
    socket.once('leftRoom', (data) => {
      if (data.success) {
        handleSuccessfulLogout(data);
      } else {
        handleLogoutError(data);
      }
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—Ö–æ–¥
    if (roomId) {
      console.log('üì§ [useLogout] Emitting leaveRoom event');
      socket.emit('leaveRoom', roomId);
    } else {
      console.log('‚ö†Ô∏è [useLogout] No roomId, clearing storage and redirecting');
      clearStorage();
      window.location.href = '/';
    }
  }, []);

  return { logout };
};
